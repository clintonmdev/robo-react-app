{"version":3,"sources":["components/CardList.js","components/searchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["CardList","listRobots","robots","map","robot","className","alt","src","id","name","email","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","useState","setRobots","searchField","setSearchField","useEffect","fetch","then","response","json","users","filterRobots","filter","toLowerCase","includes","length","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"6MAwBeA,EArBE,SAAC,GAAc,IAGtBC,EAHqB,EAAZC,OAGWC,KAAI,SAACC,GAAD,OAC9B,sBAAoBC,UAAU,qDAA9B,UACQ,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,eACpB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,aAJZN,EAAMI,OAUhB,OACI,8BACCP,KCJMU,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKR,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVS,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,Y,oCCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAIzB,OAAIG,KAAKJ,MAAMC,SACJ,yDAGJG,KAAKX,MAAMK,a,GAjBCQ,aC8CZC,MAvCf,WAAe,IAAD,EAEkBC,mBAAS,IAF3B,mBAEH/B,EAFG,KAEKgC,EAFL,OAG4BD,mBAAS,IAHrC,mBAGHE,EAHG,KAGUC,EAHV,KAKVC,qBAAU,WACNC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OACVA,EAASC,UACZF,MAAK,SAAAG,GAAK,OACPR,EAAUQ,QACX,IAEP,IAIMC,EAAezC,EAAO0C,QAAO,SAAAxC,GAC/B,OAAOA,EAAMK,KAAKoC,cAAcC,SAASX,EAAYU,kBAEzD,OAAQ3C,EAAO6C,OAGP,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWQ,aAZA,SAACmC,GACpBZ,EAAeY,EAAMC,OAAOC,UAYpB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUhD,OAAQyC,WAPlC,6C,MCtBRQ,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.8e795a58.chunk.js","sourcesContent":["import React  from 'react';\n\n\nconst CardList = ({robots}) => {\n\n\n    const listRobots = robots.map((robot) =>\n    <div key={robot.id} className='tc bg-light-green dib br3 pa3 ma2 grow bw shadow-5'>\n            <img alt='robot' src={`https://robohash.org/${robot.id}}?200x200`}/>\n            <div>\n                <h2>{robot.name}</h2>\n                <p>{robot.email}</p>\n            </div>\n        </div>\n    \n    );\n    \n    return (\n        <div>\n        {listRobots}\n        </ div>\n    );\n}\n\nexport default CardList","import React from 'react'\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return(\n        <div className='pa2'>\n        <input \n        className='pa3 ba b--green bg-lightest-blue' \n        type=\"search\" \n        placeholder='Search robots'\n        onChange={searchChange} />\n        \n        </div>\n    )\n}\n\nexport default SearchBox","import React from 'react'\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height:'500px'}}>\n            {props.children}\n        </div>\n    ) \n}\n\nexport default Scroll;","import React, {Component} from 'react'\n\nclass ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError){\n            return <h1>Oooops. thats not good </h1>\n\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, {useState, useEffect} from 'react'\nimport CardList from '../components/CardList.js'\nimport SearchBox from '../components/searchBox.js'\nimport Scroll from '../components/Scroll'\nimport  './App.css'\nimport ErrorBoundry from '../components/ErrorBoundry'\n// import { robots } from './robots.js'\n\n\nfunction App(){\n    \n    const [robots, setRobots] = useState([])\n    const [searchField, setSearchField] = useState('')\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => \n            response.json())\n        .then(users => \n            setRobots(users));\n        }, [])\n\n    const onSearchChange = (event) => {\n        setSearchField(event.target.value)\n    }\n\n    const filterRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchField.toLowerCase())})\n        \n    return !robots.length ?\n        <h1>Loading...</h1> :\n        (\n            <div className='tc'>\n                <h1 className='f2' >RoboFriends </h1>\n                <SearchBox searchChange={onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filterRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        )\n\n    }\n    \n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}